-- department-top-three-salaries
A company's executives are interested in seeing who earns the most money in each of the company's departments. A high earner in a department is an employee who has a salary in the top three unique salaries for that department.

Write an SQL query to find the employees who are high earners in each of the departments.


select d1.name as 'Department' ,e1.name as 'Employee', e1.salary
from employee e1
join department d1
on e1.departmentid = d1.id
where 3 > (select count(distinct e2.salary) from employee e2
           where e2.salary > e1.salary
           and e2.departmentid = e1.departmentid

)



-- Nth-highest-salary
Write an SQL query to report the nth highest salary from the Employee table. If there is no nth highest salary, the query should report null.

select * from employee 
where sal in (select min(sal) from (select distinct top N sal from employee
                            order by sal desc))




-- Rank Scores 
Write an SQL query to rank the scores. The ranking should be calculated according to the following rules:

select s1.score, (select count(distinct s2.score) from scores s2 where s2.score >= s1.score ) rank
from scores s1

order by s1.score desc


-- Consecutive Numbers
Write an SQL query to find all numbers that appear at least three times consecutively.

select distinct l1.num as ConsecutiveNums
        from logs l1
        join logs l2
        on l1.id = l2.id -1
        join logs l3
        on l2.id = l3.id -1
        where l1.num = l2.num
        and l2.num = l3.num
        
        
-- Trips and Users
Write a SQL query to find the cancellation rate of requests with unbanned users (both client and driver must not be banned) each day between "2013-10-01" and "2013-10-03". Round Cancellation Rate to two decimal points.

select t1.request_at as Day,
round(sum(case when t1.status = 'Completed' then 0 else 1 end) / count(*), 2) as "Cancellation Rate"
from trips t1
join Users u1
on t1.Client_Id = u1.Users_Id 
where t1.Request_at between '2013-10-01' and '2013-10-03' and u1.Banned = 'No'
group by t1.Request_at
